--
--	bcdtab.vhd
--
--	generated VHDL table for BCD conversion
--
--		DONT edit this file!
--		generated by GenBcdConv
--

library ieee;
use ieee.std_logic_1164.all;

entity bcdtab is
port (
   address : in std_logic_vector(6 downto 0);
   q : out std_logic_vector(7 downto 0)
);
end bcdtab;

architecture rtl of bcdtab is

begin

process(address) begin

case address is
    when "0000000" => q <= "00000000";
    when "0000001" => q <= "00000001";
    when "0000010" => q <= "00000010";
    when "0000011" => q <= "00000011";
    when "0000100" => q <= "00000100";
    when "0000101" => q <= "00000101";
    when "0000110" => q <= "00000110";
    when "0000111" => q <= "00000111";
    when "0001000" => q <= "00001000";
    when "0001001" => q <= "00001001";
    when "0001010" => q <= "00010000";
    when "0001011" => q <= "00010001";
    when "0001100" => q <= "00010010";
    when "0001101" => q <= "00010011";
    when "0001110" => q <= "00010100";
    when "0001111" => q <= "00010101";
    when "0010000" => q <= "00010110";
    when "0010001" => q <= "00010111";
    when "0010010" => q <= "00011000";
    when "0010011" => q <= "00011001";
    when "0010100" => q <= "00100000";
    when "0010101" => q <= "00100001";
    when "0010110" => q <= "00100010";
    when "0010111" => q <= "00100011";
    when "0011000" => q <= "00100100";
    when "0011001" => q <= "00100101";
    when "0011010" => q <= "00100110";
    when "0011011" => q <= "00100111";
    when "0011100" => q <= "00101000";
    when "0011101" => q <= "00101001";
    when "0011110" => q <= "00110000";
    when "0011111" => q <= "00110001";
    when "0100000" => q <= "00110010";
    when "0100001" => q <= "00110011";
    when "0100010" => q <= "00110100";
    when "0100011" => q <= "00110101";
    when "0100100" => q <= "00110110";
    when "0100101" => q <= "00110111";
    when "0100110" => q <= "00111000";
    when "0100111" => q <= "00111001";
    when "0101000" => q <= "01000000";
    when "0101001" => q <= "01000001";
    when "0101010" => q <= "01000010";
    when "0101011" => q <= "01000011";
    when "0101100" => q <= "01000100";
    when "0101101" => q <= "01000101";
    when "0101110" => q <= "01000110";
    when "0101111" => q <= "01000111";
    when "0110000" => q <= "01001000";
    when "0110001" => q <= "01001001";
    when "0110010" => q <= "01010000";
    when "0110011" => q <= "01010001";
    when "0110100" => q <= "01010010";
    when "0110101" => q <= "01010011";
    when "0110110" => q <= "01010100";
    when "0110111" => q <= "01010101";
    when "0111000" => q <= "01010110";
    when "0111001" => q <= "01010111";
    when "0111010" => q <= "01011000";
    when "0111011" => q <= "01011001";
    when "0111100" => q <= "01100000";
    when "0111101" => q <= "01100001";
    when "0111110" => q <= "01100010";
    when "0111111" => q <= "01100011";
    when "1000000" => q <= "01100100";
    when "1000001" => q <= "01100101";
    when "1000010" => q <= "01100110";
    when "1000011" => q <= "01100111";
    when "1000100" => q <= "01101000";
    when "1000101" => q <= "01101001";
    when "1000110" => q <= "01110000";
    when "1000111" => q <= "01110001";
    when "1001000" => q <= "01110010";
    when "1001001" => q <= "01110011";
    when "1001010" => q <= "01110100";
    when "1001011" => q <= "01110101";
    when "1001100" => q <= "01110110";
    when "1001101" => q <= "01110111";
    when "1001110" => q <= "01111000";
    when "1001111" => q <= "01111001";
    when "1010000" => q <= "10000000";
    when "1010001" => q <= "10000001";
    when "1010010" => q <= "10000010";
    when "1010011" => q <= "10000011";
    when "1010100" => q <= "10000100";
    when "1010101" => q <= "10000101";
    when "1010110" => q <= "10000110";
    when "1010111" => q <= "10000111";
    when "1011000" => q <= "10001000";
    when "1011001" => q <= "10001001";
    when "1011010" => q <= "10010000";
    when "1011011" => q <= "10010001";
    when "1011100" => q <= "10010010";
    when "1011101" => q <= "10010011";
    when "1011110" => q <= "10010100";
    when "1011111" => q <= "10010101";
    when "1100000" => q <= "10010110";
    when "1100001" => q <= "10010111";
    when "1100010" => q <= "10011000";
    when "1100011" => q <= "10011001"; -- 99
    when others => q <= "00000000";
	 
end case;
end process;

end rtl;